#!/usr/bin/stap -v

global curr_in_ms
global vcpu_list
global ipi
global dst_ipi
global shorthand
global shorthand_name
global nr_vcpu_shorthand
global vcpu_shorthand
global vcpu_dest_id

probe begin {
        shorthand_name[0] = "dst";
        shorthand_name[1] = "self";
        shorthand_name[2] = "all";
        shorthand_name[3] = "all-but-self";
}

probe kernel.function("list_add_ipi_pending") {
        src_tid = tid()
        dst_tid = $p->pid
        if ([src_tid] in vcpu_list && [dst_tid] in vcpu_list) {
                src_vcpu_id = vcpu_list[src_tid]
                dst_vcpu_id = vcpu_list[dst_tid]
                ipi[src_vcpu_id, dst_vcpu_id]++

                if (vcpu_shorthand[src_vcpu_id] == 0 && vcpu_dest_id[src_vcpu_id] != 254 && vcpu_dest_id[src_vcpu_id] != src_vcpu_id)
                        dst_ipi[src_vcpu_id, dst_vcpu_id]++
        }
}

probe kernel.trace("kvm_apic_ipi") {
        sh = $icr_low >> 18 & 0x3
        src_tid = tid()
        if ([src_tid] in vcpu_list) {
                src_vcpu_id = vcpu_list[src_tid]
                vcpu_shorthand[src_vcpu_id] = sh
                vcpu_dest_id[src_vcpu_id] = $dest_id
                nr_vcpu_shorthand[src_vcpu_id, sh]++
        }
        shorthand[sh]++
}

probe module("kvm").function("kvm_arch_vcpu_load") {
    vcpu_list[tid()] = $vcpu->vcpu_id
}

probe timer.ms(1000) {
        curr_in_ms += 1000
        foreach ([src_vcpu_id, dst_vcpu_id] in dst_ipi-) {
                printf("%d->%d: %d\n", src_vcpu_id, dst_vcpu_id, dst_ipi[src_vcpu_id, dst_vcpu_id])
        }
        delete dst_ipi
        print("\n")
}

probe end {
        print("\n[IPI shorthand]\n")
        foreach (sh+ in shorthand) { 
                printf("%d-%-15s: %d\n", sh, shorthand_name[sh], shorthand[sh])
                total += shorthand[sh]
        }
        printf("total=%d\n", total)
        print("[IPI shorthand per VCPU]\n")
        foreach ([src_vcpu_id+, sh] in nr_vcpu_shorthand) {
                printf("vcpu_id=%d sh=%s: %d\n", src_vcpu_id, shorthand_name[sh], nr_vcpu_shorthand[src_vcpu_id, sh])
        }
        print("[IPI]\n")
        foreach ([src_vcpu_id, dst_vcpu_id] in ipi-) {
                printf("%d->%d: %d\n", src_vcpu_id, dst_vcpu_id, ipi[src_vcpu_id, dst_vcpu_id])
        }
        /*
        print("[TARGETED IPI]\n")
        foreach ([src_vcpu_id, dst_vcpu_id] in dst_ipi-) {
                printf("%d->%d: %d\n", src_vcpu_id, dst_vcpu_id, dst_ipi[src_vcpu_id, dst_vcpu_id])
        }
        */
}
