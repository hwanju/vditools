SEND_READY_SIGNAL
WAIT_START_SIGNAL

i=0
echo > /tmp/total.result
while true; do
        # check pvspinlock current status
        if [ -e /sys/kernel/debug/kvm_guest/spinlocks/ ]; then
                echo "pvspinlock label" > /tmp/pvspinlock.log
                find /sys/kernel/debug/kvm_guest/spinlocks/ -type f -exec basename {} \; >> /tmp/pvspinlock.log
                echo "pvspinlock start" >> /tmp/pvspinlock.log
                find /sys/kernel/debug/kvm_guest/spinlocks/ -type f -exec cat {} \; >> /tmp/pvspinlock.log
        fi
        # init lockstat
        if [ -e /proc/lock_stat ]; then
                echo 0 > /proc/lock_stat
        fi
	# check and run futex profiling
	if [ "$PRIVATE_ARG2" == "futex" -a $i -eq 0 -a -e /root/futex_prof.ko ]; then
		procname=$PACKAGE
		if [ "$PACKAGE" == "raytrace" ]; then
			procname=rtview
		fi
		echo "futex_wait_stat" > /tmp/futex_prof.log
		#staprun /root/futex_prof.ko | grep $procname >> /tmp/futex_prof.log &
		staprun /root/futex_prof.ko >> /tmp/futex_prof.log 2>&1 &
	fi

        echo "start_stat" > /tmp/stat.log
        cat /proc/stat >> /tmp/stat.log
        echo start_time=`date '+%s'` > /tmp/schedstat.log
        cat /proc/schedstat >> /tmp/schedstat.log
	pidstat -u 10 > /tmp/pidstat.log &
        
	ssh $CLIENT_IP /usr/bin/time -v ab -n 100000000 -c 100 http://$IP_GUEST1/html/* > /tmp/result 2>&1

	# finish futex profiling if needed
	if [  "$PRIVATE_ARG2" == "futex" -a $i -eq 0 ]; then
		killall -15 stapio
	fi

	killall -9 pidstat
        echo "end_stat" >> /tmp/stat.log
        cat /proc/stat >> /tmp/stat.log
        echo end_time=`date '+%s'` >> /tmp/schedstat.log
        cat /proc/schedstat >> /tmp/schedstat.log
        
        # check pvspinlock finish status
        if [ -e /sys/kernel/debug/kvm_guest/spinlocks/ ]; then
                echo "pvspinlock end" >> /tmp/pvspinlock.log
                find /sys/kernel/debug/kvm_guest/spinlocks/ -type f -exec cat {} \; >> /tmp/pvspinlock.log
        fi
        
        # merge result
        cat /tmp/result >> /tmp/total.result
        if [ -e /sys/kernel/debug/kvm_guest/spinlocks/ ]; then
                cat /tmp/pvspinlock.log >> /tmp/total.result
        fi
        if [ -e /proc/lock_stat ]; then
                cat /proc/lock_stat >> /tmp/total.result
        fi
        cat /tmp/stat.log >> /tmp/total.result
        cat /tmp/schedstat.log >> /tmp/total.result
	cat /tmp/pidstat.log >> /tmp/total.result

	if [ "$PRIVATE_ARG2" == "no_iter" ]; then
		break
	fi

	# query to host whether the minimum number of iterations are ended
	SEND_QUERY_SIGNAL

	# get a message from host
	while [ 1 ]
	do
		if [ -e /tmp/query ]
		then
			break
		fi
		sleep 0.01
	done

	# (stop or repeat)
	reply=$(cat /tmp/query)
	if [ "$reply" = "stop" ]
	then
		break
	fi
	rm /tmp/query
	i=$(( $i + 1 ))
done
# futex result
if [ "$PRIVATE_ARG2" == "futex" ]; then
	sleep 10
	cat /tmp/futex_prof.log >> /tmp/total.result
fi

cat /tmp/total.result | TO_HOST
